{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/Graphics.vue?f952","webpack:///./src/App.vue?f446","webpack:///./src/App.vue?2c5f","webpack:///./src/Graphics.vue?3d68","webpack:///./src/logic/renderer.ts","webpack:///./src/logic/rules.ts","webpack:///./src/logic/world.ts","webpack:///./src/logic/presets.ts","webpack:///./src/logic/timer.ts","webpack:///./src/Graphics.vue?49f2","webpack:///./src/Graphics.vue?4486","webpack:///./src/Graphics.vue","webpack:///./src/App.vue?ec60","webpack:///./src/App.vue?640d","webpack:///./src/App.vue","webpack:///./src/main.ts"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","_vm","this","_h","$createElement","_c","_self","attrs","_v","staticRenderFns","_m","on","updateButton","timer","toggle","_s","started","_e","clearScreen","staticStyle","frameDelayTextbox","model","callback","$$v","inputDelay","expression","slot","saveLoad","saveLoadShow","$event","saveLoadText","staticClass","load","GRID_LINE_COLOR","GRID_LINE_LEN","BLOCK_LEN","CELL_DEAD","CELL_ALIVE","BLOCK_FULL_LEN","canvas","context","getContext","width","height","color","box","fillStyle","fillRect","x","y","xLen","yLen","drawRect","block","gridX","gridY","cell","status","alive","drawGridBlock","getCellColor","point","rules","nearby","selfAlive","aliveCount","flat","filter","rule","Rules","check","selfStatus","conditions","condition","checkCondition","operator","Error","conway","STATUS_ALIVE","STATUS_DEAD","config","activePoints","clearGrid","presetCells","forEach","setCellStatus","grid","Array","fill","undefined","map","JSON","stringify","getCell","serializedWorld","points","parse","World","defaultStatus","onUpdate","alivePoints","flatMap","getNearbyCells","Set","row","wrappedX","wrappedY","updateActivePoints","pointsToUpdate","newStatus","PATTERN_R_PENTOMINO","PATTERN_CELLULAR_AUTOMATA","center","offsetX","offsetY","pattern","lines","replace","split","centerX","Math","floor","centerY","line","charAt","banner","delay","intervalId","restart","stop","setInterval","clearInterval","start","nullableCanvas","document","querySelector","renderer","setFrame","drawGrid","world","CELLULAR_AUTOMATA","drawCell","act","addEventListener","event","pageX","offsetLeft","pageY","offsetTop","console","log","offsetWidth","offsetHeight","setDelay","serializeWorld","loadWorld","component","components","Graphics","use","productionTip","render","h","$mount"],"mappings":"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","file":"js/app.f9ad6835.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"app\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([0,\"chunk-vendors\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","import mod from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./Graphics.vue?vue&type=style&index=0&id=574207eb&lang=scss&scoped=true&\"; export default mod; export * from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./Graphics.vue?vue&type=style&index=0&id=574207eb&lang=scss&scoped=true&\"","import mod from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=style&index=0&lang=scss&\"; export default mod; export * from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=style&index=0&lang=scss&\"","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{attrs:{\"id\":\"app\"}},[_c('h1',[_vm._v(\"Cellular Automata\")]),_c('Graphics')],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{attrs:{\"id\":\"graphics\"}},[_vm._m(0),_c('div',{attrs:{\"id\":\"controls\"}},[_c('el-button',{attrs:{\"type\":\"info\",\"plain\":\"\"},on:{\"click\":_vm.updateButton}},[_vm._v(\"Update\")]),(_vm.timer != null)?_c('el-button',{attrs:{\"type\":\"info\",\"plain\":\"\"},on:{\"click\":_vm.toggle}},[_vm._v(\" \"+_vm._s(_vm.timer.started ? 'Stop' : 'Start')+\" \")]):_vm._e(),_c('el-button',{attrs:{\"type\":\"info\",\"plain\":\"\"},on:{\"click\":_vm.clearScreen}},[_vm._v(\" Clear Screen \")]),_c('div',{staticStyle:{\"display\":\"inline-block\",\"width\":\"200px\",\"margin\":\"0 10px 0 10px\"}},[_c('el-input',{attrs:{\"type\":\"number\",\"id\":\"input-delay\"},on:{\"change\":_vm.frameDelayTextbox},model:{value:(_vm.inputDelay),callback:function ($$v) {_vm.inputDelay=$$v},expression:\"inputDelay\"}},[_c('template',{slot:\"prepend\"},[_vm._v(\"Frame Delay: \")])],2)],1),_c('el-button',{attrs:{\"type\":\"info\",\"plain\":\"\"},on:{\"click\":_vm.saveLoad}},[_vm._v(\" Save/Load \")]),_c('el-dialog',{attrs:{\"title\":\"Save / Load\",\"visible\":_vm.saveLoadShow,\"width\":\"80%\"},on:{\"update:visible\":function($event){_vm.saveLoadShow=$event}}},[_c('el-input',{attrs:{\"type\":\"textarea\",\"rows\":4,\"placeholder\":\"Please input\",\"id\":\"save-load-code\"},model:{value:(_vm.saveLoadText),callback:function ($$v) {_vm.saveLoadText=$$v},expression:\"saveLoadText\"}}),_c('span',{staticClass:\"dialog-footer\",attrs:{\"slot\":\"footer\"},slot:\"footer\"},[_c('el-button',{staticClass:\"btn\",attrs:{\"data-clipboard-target\":\"#save-load-code\"}},[_vm._v(\"Copy\")]),_c('el-button',{on:{\"click\":_vm.load}},[_vm._v(\"Load\")])],1)],1)],1)])}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{attrs:{\"id\":\"canvas-div\"}},[_c('canvas',{attrs:{\"id\":\"world-canvas\"}})])}]\n\nexport { render, staticRenderFns }","import {Cell} from '@/logic/world';\n\nexport interface Box\n{\n    x: number\n    y: number\n    xLen: number\n    yLen: number\n}\n\nexport interface GridBlock\n{\n    gridX: number\n    gridY: number\n}\n\n// Constant configurations\nconst GRID_LINE_COLOR = '#5f5f5f';\nconst GRID_LINE_LEN = 1;\nconst BLOCK_LEN = 4;\nconst CELL_DEAD = '#000000';\nconst CELL_ALIVE = '#c8c8c8';\n\n// Computed\nconst BLOCK_FULL_LEN = BLOCK_LEN + GRID_LINE_LEN;\n\nexport default class Renderer\n{\n    private canvas: any;\n    private context: any;\n\n    /**\n     * Construct a renderer\n     *\n     * @param canvas\n     */\n    constructor(canvas: any)\n    {\n        this.canvas = canvas;\n        this.context = canvas.getContext('2d');\n    }\n\n    get width()\n    {\n        return this.canvas.width;\n    }\n\n    get height()\n    {\n        return this.canvas.height;\n    }\n\n    /**\n     * Set frame\n     *\n     * @param width\n     * @param height\n     */\n    public setFrame(width: number, height: number)\n    {\n        this.canvas.width = width;\n        this.canvas.height = height;\n    }\n\n    /**\n     * Draw an rectangle\n     *\n     * @param color\n     * @param box\n     */\n    public drawRect(color: string, box: Box)\n    {\n        this.context.fillStyle = color;\n        this.context.fillRect(box.x, box.y, box.xLen, box.yLen);\n    }\n\n    /**\n     * Draw grid lines\n     */\n    public drawGrid()\n    {\n        // Get width and height\n        let width = this.width;\n        let height = this.height;\n\n        // Loop through all x values\n        for (let x = BLOCK_LEN; x < width; x += BLOCK_FULL_LEN)\n        {\n            // Draw line\n            this.drawRect(GRID_LINE_COLOR, {x: x, y: 0, xLen: GRID_LINE_LEN, yLen: height});\n        }\n\n        // Loop through all y values\n        for (let y = BLOCK_LEN; y < height; y += BLOCK_FULL_LEN)\n        {\n            this.drawRect(GRID_LINE_COLOR, {x: 0, y: y, xLen: width, yLen: GRID_LINE_LEN});\n        }\n    }\n\n    /**\n     * Draw a block on the grid\n     *\n     * @param color\n     * @param block\n     */\n    public drawGridBlock(color: string, block: GridBlock)\n    {\n        this.drawRect(color, {x: block.gridX * BLOCK_FULL_LEN, y: block.gridY * BLOCK_FULL_LEN,\n            xLen: BLOCK_LEN, yLen: BLOCK_LEN})\n    }\n\n    /**\n     * Get the supposed rendering color of a cell\n     *\n     * @param cell\n     */\n    public getCellColor(cell: Cell): string\n    {\n        return cell.status.alive ? CELL_ALIVE : CELL_DEAD;\n    }\n\n    public drawCell(cell: Cell)\n    {\n        this.drawGridBlock(this.getCellColor(cell), {gridX: cell.point.x, gridY: cell.point.y})\n    }\n}\n","import {Cell, Status} from '@/logic/world';\n\nexport interface Rule\n{\n    selfStatus: Status\n    conditions: Condition[]\n    result: Status\n}\n\nexport interface Condition\n{\n    operator: string\n    aliveCount: number\n}\n\nexport default class Rules\n{\n    /**\n     * Apply rules\n     *\n     * @param rules\n     * @param nearby 9*9 points nearby\n     */\n    public static apply(rules: Rule[], nearby: Cell[][]): Status\n    {\n        // Count alive\n        let selfAlive = nearby[1][1].status.alive;\n        let aliveCount = nearby.flat().filter(c => c.status.alive).length - (selfAlive ? 1 : 0);\n\n        // Loop through rules\n        for (let rule of rules)\n        {\n            // A rule applies\n            if (Rules.check(rule, selfAlive, aliveCount))\n            {\n                // Status becomes the result of the rule\n                return rule.result;\n            }\n        }\n\n        // Status unchanged\n        return nearby[1][1].status;\n    }\n\n    /**\n     * Check if a rule apply\n     *\n     * @param rule\n     * @param selfAlive\n     * @param aliveCount\n     */\n    public static check(rule: Rule, selfAlive: boolean, aliveCount: number): boolean\n    {\n        // Check self status\n        if (selfAlive != rule.selfStatus.alive) return false;\n\n        // Apply conditions\n        for (let condition of rule.conditions)\n        {\n            if (!this.checkCondition(condition, aliveCount))\n            {\n                return false;\n            }\n        }\n\n        // All conditions passed\n        return true;\n    }\n\n    /**\n     * Apply a condition\n     *\n     * @param condition\n     * @param aliveCount\n     */\n    private static checkCondition(condition: Condition, aliveCount: number): boolean\n    {\n        switch (condition.operator)\n        {\n            case '<': return aliveCount < condition.aliveCount;\n            case '==': return aliveCount == condition.aliveCount;\n            case '>': return aliveCount > condition.aliveCount;\n            case '>=': return aliveCount >= condition.aliveCount;\n            case '<=': return aliveCount <= condition.aliveCount;\n        }\n\n        throw Error('Condition unrecognized: ' + condition.operator);\n    }\n\n    /**\n     * Conway rules\n     */\n    public static conway: Rule[] =\n    [\n        // Under population\n        {\n            selfStatus: {alive: true},\n            conditions: [{operator: '<', aliveCount: 2}],\n            result: {alive: false}\n        },\n        // Stay alive\n        {\n            selfStatus: {alive: true},\n            conditions: [{operator: '>=', aliveCount: 2}, {operator: '<=', aliveCount: 3}],\n            result: {alive: true}\n        },\n        // Over population\n        {\n            selfStatus: {alive: true},\n            conditions: [{operator: '>=', aliveCount: 4}],\n            result: {alive: false}\n        },\n        // Reproduce\n        {\n            selfStatus: {alive: false},\n            conditions: [{operator: '==', aliveCount: 3}],\n            result: {alive: true}\n        },\n    ]\n}\n","import Rules, {Rule} from '@/logic/rules';\n\n/**\n * Config of a world\n */\nexport interface WorldConfig\n{\n    // Meta information\n    name: string\n    width: number\n    height: number\n    rules: Rule[]\n    presetCells: Cell[]\n    onUpdate: ((cell: Cell) => void) | undefined\n}\n\n/**\n * A point contains a x coordinate and a y coordinate.\n */\nexport interface Point\n{\n    x: number\n    y: number\n}\n\n/**\n * Status of a cell. Currently is either dead or alive.\n */\nexport interface Status\n{\n    alive: boolean\n}\n\n/**\n * A Cell contains its coordinates and its status\n */\nexport interface Cell\n{\n    point: Point\n    status: Status\n}\n\n// Those constants are for memory optimizations\nexport const STATUS_ALIVE: Status = {alive: true};\nexport const STATUS_DEAD: Status = {alive: false};\n\nexport default class World\n{\n    // Default status\n    private static defaultStatus: Status = {alive: false};\n\n    // Config\n    config: WorldConfig;\n\n    // Grid (grid[x][y] = grid state)\n    grid: Cell[][];\n\n    // Active points (Undefined = no cell)\n    activePoints: Point[] = [];\n\n    /**\n     * Construct a world with a defined world config\n     *\n     * @param config\n     */\n    constructor(config: WorldConfig)\n    {\n        this.config = config;\n\n        // Make empty grid\n        this.clearGrid();\n\n        // Initialize active points\n        this.activePoints = [];\n        config.presetCells.forEach(cell =>\n        {\n            this.setCellStatus(cell.point, cell.status);\n            this.activePoints.push(cell.point);\n        });\n    }\n\n    /**\n     * Clear the grid\n     */\n    public clearGrid()\n    {\n        // Make empty grid\n        this.grid = new Array(this.config.width).fill(undefined)\n            .map(() => new Array(this.config.height).fill(undefined));\n\n        // Check active zone\n        this.activePoints.forEach(point =>\n        {\n            // Clear point\n            this.setCellStatus(point, STATUS_DEAD);\n        });\n\n        // Clear active points\n        this.activePoints = [];\n    }\n\n    public serializeWorld(): string\n    {\n      return JSON.stringify(this.activePoints.filter(point => this.getCell(point).status.alive))\n    }\n\n    public loadWorld(serializedWorld: string)\n    {\n          let points: Point[] = JSON.parse(serializedWorld);\n\n          //for (let point of points)\n          points.forEach(point =>\n          {\n            this.setCellStatus(point, STATUS_ALIVE);\n            this.activePoints.push(point);\n          });\n    }\n\n    /**\n     * Get value of a point\n     *\n     * @param point\n     * @return Cell\n     */\n    public getCell(point: Point): Cell\n    {\n        let cell = this.grid[point.x][point.y];\n\n        // If null, give the point a unique value\n        return cell != undefined ? cell\n            : this.grid[point.x][point.y] = {point: point, status: World.defaultStatus};\n    }\n\n    /**\n     * Set value of a point\n     *\n     * @param point\n     * @param status\n     */\n    public setCellStatus(point: Point, status: Status)\n    {\n        // Get cell\n        let cell = this.getCell(point);\n\n        // Update cell status\n        cell.status = status.alive ? STATUS_ALIVE : STATUS_DEAD;\n\n        // Callback\n        if (this.config.onUpdate != null)\n        {\n            this.config.onUpdate(cell);\n        }\n    }\n\n    /**\n     * Update alive points\n     */\n    private updateActivePoints()\n    {\n        // Filter all of the alive points from previous active points\n        let alivePoints = this.activePoints.filter(point => this.getCell(point).status.alive);\n\n        // Put nearby points in.\n        alivePoints = alivePoints.flatMap(point => this.getNearbyCells(point).flat().map(cell => cell.point));\n\n        // Only unique values\n        this.activePoints = [...new Set(alivePoints)];\n    }\n\n    /**\n     * Get nearby 9*9 cells\n     *\n     * @param point Point in the center\n     */\n    private getNearbyCells(point: Point): Cell[][]\n    {\n        let result: Cell[][] = [];\n\n        // Loop through 9*9\n        for (let x = point.x - 1; x <= point.x + 1; x++)\n        {\n            let row = [];\n\n            for (let y = point.y - 1; y <= point.y + 1; y++)\n            {\n                // Wrap coordinates around width and height\n                let wrappedX = x % this.config.width;\n                let wrappedY = y % this.config.height;\n\n                // Wrap around -1\n                if (wrappedX < 0) wrappedX = this.config.width + wrappedX;\n                if (wrappedY < 0) wrappedY = this.config.height + wrappedY;\n\n                row.push(this.getCell({x: wrappedX, y: wrappedY}))\n            }\n\n            // Add row to result\n            result.push(row);\n        }\n\n        return result;\n    }\n\n    /**\n     * Update frame\n     */\n    public act()\n    {\n        this.updateActivePoints();\n\n        // Points to update\n        let pointsToUpdate = [];\n\n        // Loop through active points\n        for (let point of this.activePoints)\n        {\n            // Get new status\n            let newStatus = Rules.apply(this.config.rules, this.getNearbyCells(point));\n\n            // Add to update list\n            pointsToUpdate.push({point: point, status: newStatus});\n        }\n\n        // Update the points\n        for (let point of pointsToUpdate)\n        {\n            // Set new status\n            this.setCellStatus(point.point, point.status);\n\n            // Add active point\n            this.activePoints.push(point.point);\n        }\n    }\n}\n","import {Cell, Point, Status, STATUS_ALIVE, STATUS_DEAD} from '@/logic/world';\n\nexport interface Pattern\n{\n    pattern: string\n    width: number\n    height: number\n}\n\nconst PATTERN_R_PENTOMINO =\n    `.##\n     ##.\n     .#.`;\n\nconst PATTERN_CELLULAR_AUTOMATA = \n`.#####.........................................................#..................................................\n #.....#.######.#......#......#....#.#........##...#####.......#.#...#....#.#####..####..#....#...##...#####...##..\n #.......#......#......#......#....#.#.......#..#..#....#.....#...#..#....#...#...#....#.##..##..#..#....#....#..#.\n #.......#####..#......#......#....#.#......#....#.#....#....#.....#.#....#...#...#....#.#.##.#.#....#...#...#....#\n #.......#......#......#......#....#.#......######.#####.....#######.#....#...#...#....#.#....#.######...#...######\n #.....#.#......#......#......#....#.#......#....#.#...#.....#.....#.#....#...#...#....#.#....#.#....#...#...#....#\n .#####..######.######.######..####..######.#....#.#....#....#.....#..####....#....####..#....#.#....#...#...#....#`;\n\nexport default class Presets\n{\n    x: number;\n    y: number;\n\n    constructor(center: Point)\n    {\n        this.x = center.x;\n        this.y = center.y;\n    }\n\n    /**\n     * Make a cell\n     *\n     * @param offsetX\n     * @param offsetY\n     * @param status\n     */\n    private cell(offsetX: number, offsetY: number, status: Status): Cell\n    {\n        return {point: {x: this.x + offsetX, y: this.y + offsetY}, status: status}\n    }\n\n    /**\n     * Parse pattern\n     *\n     * @param pattern\n     */\n    public parse(pattern: Pattern): Cell[]\n    {\n        // Split string into 2d array\n        let lines: string[] = pattern.pattern.replace(/ /g, '').split('\\n');\n        let result: Cell[] = [];\n\n        let centerX = Math.floor(pattern.width / 2);\n        let centerY = Math.floor(pattern.height / 2);\n\n        // Loop through lines\n        lines.forEach((line, y) =>\n        {\n            for (let x = 0; x < line.length; x++)\n            {\n                result.push(this.cell(x - centerX, y - centerY, line.charAt(x) == '#' ? STATUS_ALIVE : STATUS_DEAD))\n            }\n        });\n\n        return result;\n    }\n\n    public get R_PENTOMINO(): Cell[]\n    {\n        return this.parse({width: 3, height: 3, pattern: PATTERN_R_PENTOMINO})\n    }\n\n    public get CELLULAR_AUTOMATA(): Cell[]\n    {\n        let banner = this.parse({width: 114, height: 6, pattern: PATTERN_CELLULAR_AUTOMATA});\n\n        // Add random points\n        /*for (let i = 0; i < 200; i ++)\n        {\n            let POSITIONS =\n            [\n                [-1, -1], [-1, 0], [-1, 1],\n                [ 0, -1], [ 0, 0], [ 0, 1],\n                [ 1, -1], [ 1, 0], [ 1, 1]\n            ];\n\n            let x = Math.floor(Math.random() * 198 - 99);\n            let y = Math.floor(Math.random() * 98 - 49);\n            let neighborsCount = Math.floor(Math.random() * 4);\n\n            let existingNeighbors = [4];\n\n            // Add neighbors\n            for (let j = 0; j < neighborsCount; j++)\n            {\n                let pos = Math.floor(Math.random() * 8);\n\n                // Already exist\n                if (existingNeighbors.includes(pos))\n                {\n                    j--;\n                    continue;\n                }\n\n                // Push\n                existingNeighbors.push(pos);\n                banner.push(this.cell(x + Presets.POSITIONS[pos][0], y + Presets.POSITIONS[pos][1], STATUS_ALIVE))\n            }\n\n            banner.push(this.cell(x, y, STATUS_ALIVE));\n            // banner.push(...new Presets({x: Math.floor(Math.random() * 20 + i), y: Math.floor(Math.random() * 98 + 1)}).R_PENTOMINO);\n        }*/\n\n        return banner;\n    }\n}\n","export default class Timer\n{\n    private intervalId: number = -1;\n    private callback: TimerHandler;\n    private delay: number;\n\n    constructor(callback: TimerHandler, delay: number)\n    {\n        this.callback = callback;\n        this.delay = delay;\n    }\n\n    /**\n     * Set delay\n     *\n     * @param delay\n     */\n    public setDelay(delay: number)\n    {\n        this.delay = delay;\n        this.restart();\n    }\n\n    /**\n     * Start the timer\n     */\n    public start()\n    {\n        if (this.started) stop();\n        this.intervalId = setInterval(this.callback, this.delay);\n    }\n\n    /**\n     * Stop the timer\n     */\n    public stop()\n    {\n        if (!this.started) return;\n\n        clearInterval(this.intervalId);\n        this.intervalId = -1;\n    }\n\n    /**\n     * Restart the timer\n     */\n    public restart()\n    {\n        if (!this.started) return;\n\n        this.stop();\n        this.start();\n    }\n\n    /**\n     * Toggle start / stop states\n     */\n    public toggle()\n    {\n        if (this.started) this.stop();\n        else this.start();\n    }\n\n    /**\n     * Started or not\n     */\n    get started()\n    {\n        return this.intervalId != -1;\n    }\n}\n","\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport {Component, Vue} from 'vue-property-decorator';\nimport Renderer from '@/logic/renderer';\nimport World from '@/logic/world';\nimport Rules from '@/logic/rules';\nimport Presets from '@/logic/presets';\nimport Timer from '@/logic/timer';\nimport ClipboardJS from 'clipboard';\n\n@Component\nexport default class Graphics extends Vue\n{\n    renderer: Renderer;\n    world: World;\n    timer: Timer = null as unknown as Timer;\n\n    inputDelay: number = 100;\n    saveLoadText: string = '';\n    saveLoadShow: boolean = false;\n\n    /**\n     * This is called when the page finishes loading\n     */\n    mounted()\n    {\n        // Find canvas and create renderer\n        let nullableCanvas = document.querySelector('#world-canvas');\n        if (nullableCanvas == null) return;\n        let canvas: any = nullableCanvas;\n        this.renderer = new Renderer(canvas);\n\n        // Set frame\n        this.renderer.setFrame(1000, 500);\n\n        // Draw grid\n        this.renderer.drawGrid();\n\n        // Create world\n        this.world = new World(\n        {\n            name: 'Test',\n            width: 1000 / 5,\n            height: 500 / 5,\n            rules: Rules.conway,\n            presetCells: new Presets({x: 1000 / 5 / 2, y: 500 / 5 / 2}).CELLULAR_AUTOMATA,\n            onUpdate: cell => this.renderer.drawCell(cell)\n        });\n\n        // Create timer\n        this.timer = new Timer(() => this.world.act(), this.inputDelay);\n\n        //Register copy/paste button\n        new ClipboardJS('.btn');\n\n        // Set click listener\n        canvas.addEventListener('click', (event: any) =>\n        {\n            let x = event.pageX - canvas.offsetLeft;\n            let y = event.pageY - canvas.offsetTop;\n\n            console.log(x + ', ' + y);\n\n            // Get the current state of the cell\n            //@ts-ignore\n            let point = {x: Math.floor(x / 5 / canvas.offsetWidth * 1000), y: Math.floor(y / 5 / canvas.offsetHeight * 500)};\n            let cell = this.world.getCell(point);\n            this.world.setCellStatus(point, {alive: !cell.status.alive});\n            this.world.activePoints.push(point);\n        });\n    }\n\n    /**\n     * This is called when the update button is clicked\n     */\n    updateButton()\n    {\n        this.world.act()\n    }\n\n    toggle()\n    {\n        this.timer.toggle();\n    }\n\n    frameDelayTextbox()\n    {\n        this.timer.setDelay(this.inputDelay)\n    }\n\n    clearScreen()\n    {\n        this.world.clearGrid();\n    }\n\n    saveLoad()\n    {\n        this.saveLoadShow = true;\n        this.saveLoadText = this.world.serializeWorld();\n    }\n\n    load()\n    {\n        this.world.loadWorld(this.saveLoadText);\n    }\n}\n","import mod from \"-!../node_modules/cache-loader/dist/cjs.js??ref--13-0!../node_modules/thread-loader/dist/cjs.js!../node_modules/babel-loader/lib/index.js!../node_modules/ts-loader/index.js??ref--13-3!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./Graphics.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../node_modules/cache-loader/dist/cjs.js??ref--13-0!../node_modules/thread-loader/dist/cjs.js!../node_modules/babel-loader/lib/index.js!../node_modules/ts-loader/index.js??ref--13-3!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./Graphics.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./Graphics.vue?vue&type=template&id=574207eb&scoped=true&\"\nimport script from \"./Graphics.vue?vue&type=script&lang=ts&\"\nexport * from \"./Graphics.vue?vue&type=script&lang=ts&\"\nimport style0 from \"./Graphics.vue?vue&type=style&index=0&id=574207eb&lang=scss&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"574207eb\",\n  null\n  \n)\n\nexport default component.exports","\n\n\n\n\n\n\n\nimport {Component, Vue} from 'vue-property-decorator';\nimport Graphics from '@/Graphics.vue';\n\n@Component({\n  components: {Graphics},\n})\nexport default class App extends Vue {}\n","import mod from \"-!../node_modules/cache-loader/dist/cjs.js??ref--13-0!../node_modules/thread-loader/dist/cjs.js!../node_modules/babel-loader/lib/index.js!../node_modules/ts-loader/index.js??ref--13-3!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../node_modules/cache-loader/dist/cjs.js??ref--13-0!../node_modules/thread-loader/dist/cjs.js!../node_modules/babel-loader/lib/index.js!../node_modules/ts-loader/index.js??ref--13-3!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./App.vue?vue&type=template&id=37f2ae94&\"\nimport script from \"./App.vue?vue&type=script&lang=ts&\"\nexport * from \"./App.vue?vue&type=script&lang=ts&\"\nimport style0 from \"./App.vue?vue&type=style&index=0&lang=scss&\"\n\n\n/* normalize component */\nimport normalizer from \"!../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","import Vue from 'vue';\nimport App from './App.vue';\nimport ElementUI from 'element-ui';\nimport 'element-ui/lib/theme-chalk/index.css';\n\nVue.use(ElementUI);\n\nVue.config.productionTip = false;\n\nnew Vue({\n  render: (h) => h(App),\n}).$mount('#app');\n"],"sourceRoot":""}